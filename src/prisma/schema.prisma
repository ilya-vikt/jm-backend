// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MediaLibrary {
  id          String       @id
  alt         String       @default("")
  mimetype    String
  width       Int[]
  height      Int[]
  urls        String[]
  description String
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @default(now()) @map("updated_at")
  Categories  Categories[]
  Products    Products[]
}

model Categories {
  id        Int           @id @default(autoincrement())
  parentId  Int           @map("parent_id")
  priority  Int           @default(autoincrement())
  name      String
  image     MediaLibrary? @relation(fields: [imageId], references: [id])
  slug      String        @default("")
  imageId   String?       @map("image_id")
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @default(now()) @map("updated_at")
  filters   Filters[]
  products  Products[]

  @@index([priority])
}

model Filters {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @unique()
  caption               String                  @default("")
  type                  FilterType
  categories            Categories[]
  filtersValues         FiltersValues[]
  productsFiltersValues ProductsFiltersValues[]
  meta                  Json                    @default("{}")
  createdAt             DateTime                @default(now()) @map("created_at")
  updatedAt             DateTime                @default(now()) @map("updated_at")
}

model FiltersValues {
  id        Int      @id @default(autoincrement())
  filter    Filters  @relation(fields: [filterId], references: [id])
  filterId  Int      @map("filter_id")
  value     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}

enum FilterType {
  LIST
  MULTILIST
  NUMBER
  BOOLEAN
}

model Products {
  id                    Int                     @id @default(autoincrement())
  name                  String
  category              Categories              @relation(fields: [categoryId], references: [id])
  categoryId            Int                     @map("category_id")
  description           String
  price                 Float
  marketingPrice        Float?                  @map("marketing_price")
  thumb                 MediaLibrary            @relation(fields: [thumbId], references: [id])
  thumbId               String                  @map("thumb_id")
  productsFiltersValues ProductsFiltersValues[]
  gallery               String[]
  createdAt             DateTime                @default(now()) @map("created_at")
  updatedAt             DateTime                @default(now()) @map("updated_at")
}

model ProductsFiltersValues {
  productId Int      @map("product_id")
  filterId  Int      @map("filter_id")
  products  Products @relation(fields: [productId], references: [id])
  filters   Filters  @relation(fields: [filterId], references: [id])
  value     String

  @@unique([productId, filterId])
}
